{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/alipay.png","path":"img/alipay.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/wechat.png","path":"img/wechat.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/main.min.js","path":"js/main.min.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/search.min.js","path":"js/search.min.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/indigo/.editorconfig","hash":"9b0445427777519defe360ea38c61729d847b3d3","modified":1516378983000},{"_id":"themes/indigo/LICENSE","hash":"24944bf7920108f5a4790e6071c32e9102760c37","modified":1516378983000},{"_id":"themes/indigo/README.md","hash":"b188fb95a9c16eb188eeffa6caa0895a14676338","modified":1516378983000},{"_id":"themes/indigo/_config.yml","hash":"94df54ef64589c4a9f54a0b634968cf585c93bbc","modified":1519461631317},{"_id":"themes/indigo/package.json","hash":"c795e3100ae3655bfa8b39adcca7333a7925b47f","modified":1516378983000},{"_id":"source/_posts/CSS实用Tips.md","hash":"c3f12db69696bdf9cf5f24695f1d74da1254ec79","modified":1519463969710},{"_id":"source/_posts/HTTP协议详解.md","hash":"ac3eddf23aa2653df6e8953c9052f37ce24db4c6","modified":1520995788696},{"_id":"source/_posts/github+hexo博客的主题安装及优化.md","hash":"57c95f228a3ad9b8f9a8eb364eb4ab46a9a92d99","modified":1519469380951},{"_id":"source/_posts/前端基础知识.md","hash":"dd76eb4e964f37428d50d00b7133a8f3a0e8f069","modified":1520995520488},{"_id":"source/_posts/常用网站.md","hash":"a9e88c3373a5a7c9551ecd8451ebcc296eb518a2","modified":1519451850239},{"_id":"source/categories/index.md","hash":"300e98764377149ab82d8bf50ba82984963b7271","modified":1518084906076},{"_id":"source/tags/index.md","hash":"2d5972328d6f18f9c171be074f6a56d9dddbc21a","modified":1518084634706},{"_id":"themes/indigo/languages/en.yml","hash":"1957d2bfc3a4cef299f4f169b431e9b1128ba162","modified":1516378983000},{"_id":"themes/indigo/languages/ja.yml","hash":"74fd480874bf5e773ba7f9d2a94697cda979091f","modified":1516378983000},{"_id":"themes/indigo/languages/nl-NL","hash":"9085c04491f93066f2369911cc2175b59ae596ad","modified":1516378983000},{"_id":"themes/indigo/languages/zh-CN.yml","hash":"7dc6ae434dde390b6768d244132e23cc78c33817","modified":1516378983000},{"_id":"themes/indigo/languages/zh-TW.yml","hash":"6a9e820be66eb12ae746f2527e0dc1adf927c685","modified":1516378983000},{"_id":"themes/indigo/layout/archive.ejs","hash":"d039719e21f6a6fa2925b00aaa623a180a78c818","modified":1516378983000},{"_id":"themes/indigo/layout/categories.ejs","hash":"41783d2069d5080566a99e6312aa2113105f8b41","modified":1516378983000},{"_id":"themes/indigo/layout/category.ejs","hash":"7ea26a8a935886963eda82f41c7bd5270cf780d9","modified":1516378983000},{"_id":"themes/indigo/layout/index.ejs","hash":"39477807b98b2d2df78f3b82498a11e90be8222c","modified":1516378983000},{"_id":"themes/indigo/layout/layout.ejs","hash":"d52f43fa9572d70cae834e4887c8897b43744805","modified":1516378983000},{"_id":"themes/indigo/layout/page.ejs","hash":"afb98face24d39a21ebbbde6592a9afc98572aa4","modified":1516378983000},{"_id":"themes/indigo/layout/post.ejs","hash":"afbf8532dc8d148ca4dff2ca127a3382907cf2f5","modified":1519295905294},{"_id":"themes/indigo/layout/tag.ejs","hash":"36786a3de7f6cad58209603f7d84ba23addea174","modified":1516378983000},{"_id":"themes/indigo/layout/tags.ejs","hash":"20466446c41409d14a3d42ccaec24a65a045efef","modified":1516378983000},{"_id":"themes/indigo/scripts/plugins.js","hash":"e439d717513616bedeed37ba9b05117470809b21","modified":1519465470416},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-1.jpg","hash":"6eff01e0545a4eb323d0b990d600bb687d037aa7","modified":1519454030547},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-10.png","hash":"c9788b611f8417a4ff728b8e702f992b6a3c92a3","modified":1519468941458},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-12.png","hash":"262b215dc6cba914d6dbb9377791a81d3382947c","modified":1519469068621},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-13.png","hash":"32718eb4f4254a2b3f96b2b37bbf6f76d6ffb093","modified":1519469168572},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-2.png","hash":"10d8c0406b50db7e5d9b66e239ef85366355fcfc","modified":1519466735511},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-4.png","hash":"bbd0aa3da12ee1b8d11202098c3f21b178ff1c9f","modified":1519468008516},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-5.png","hash":"9ccd2f6e2a37caf660e0e5752b012b1e19f7a217","modified":1519468118257},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-6.png","hash":"702aca4d17fb6f5e0b964ab8ae3fed6dda44e8c8","modified":1519468191895},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-7.png","hash":"9831f2e0d6cd350ae77daa57ebdc809715c75227","modified":1519468240573},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-8.png","hash":"59390caedea56830c85c396b57f03659903e5818","modified":1519468411318},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-9.png","hash":"4c8f4f1f10e9d716c643dd04bbf6ff9c11438e87","modified":1519468697466},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"9ac30b9439fab69973cf4722dbf2945a18fd3804","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"55cd81ef9183426d6d99fd91550fce0a9cc92aa0","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"4d4f8b37af444a74269e1f3647c01a1ec051fe90","modified":1518081466271},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"b197b87b120b09b68aa3d79954ed039816a88664","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"6156bf20791e46fc1c5872113276c1c1f5c13773","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"ec7b3ec79bbbead9c7e43e2e6c6b5c8bef509410","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"bc4cb19b20de55a0332647f4dca9684184383685","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"d39afaad6b0dd2a3ae27e6db3e9a6cd6014622fa","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/paginator.ejs","hash":"dc27242927890f130a64400596b9b7ad5fca8972","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"a87d9b0485b3bf4cdfdad890e5974c43dbaa8240","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"439d6315a1b16e32b77a68c3f0cb2961d581086a","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"c2091c621b5480ef1e69d72027028cec8e929892","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/tags-bar.ejs","hash":"19eff4876d31080a427644f7a43fe172d0c008c6","modified":1516378983000},{"_id":"themes/indigo/source/css/style.less","hash":"f22d4146e0bdb4485d33f20080c67ba05724afea","modified":1516378983000},{"_id":"themes/indigo/source/img/alipay.png","hash":"3006d1335861904a63d335000b5d01890ce99ca1","modified":1518078218983},{"_id":"themes/indigo/source/img/avatar.jpg","hash":"940b2ff8ef3b21d87c49ecd53c75bd900a4ed82a","modified":1518072845413},{"_id":"themes/indigo/source/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1516378983000},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1516378983000},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1516378983000},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1516378983000},{"_id":"themes/indigo/source/img/wechat.png","hash":"97657ff48e02e8f60d66921f269dc432f2dbee73","modified":1518078280192},{"_id":"themes/indigo/source/js/main.js","hash":"300b2e963683ced162e28afcd24ffc970fc23ac2","modified":1519465367836},{"_id":"themes/indigo/source/js/main.min.js","hash":"8acf4480f8ab859423b8926b9b790c67b5a77276","modified":1516378983000},{"_id":"themes/indigo/source/js/search.js","hash":"a1de7e7a2ef8330ebcd9f3a7a4622b3bac44e4f3","modified":1516378983000},{"_id":"themes/indigo/source/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1516378983000},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-11.png","hash":"304737f48338efbc33f4f434e1c8f80711044c4e","modified":1519469025008},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-14.png","hash":"f5272fe46a9505cc65c814c6f3a4f8ce65ddb3c7","modified":1519469176646},{"_id":"themes/indigo/layout/_partial/plugins/baidu.ejs","hash":"e44d526029f122e9c2c74f3a647c35002c818cbe","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/plugins/disqus.ejs","hash":"4a0c01e4195f685f9825fcd016d01249dbdd52ca","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/plugins/dynamic-title.ejs","hash":"23c101d45911eb0846533aaa2d409c43aa5e899a","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/plugins/gitment.ejs","hash":"5723d507eca4390e8e5d18c0770e7953b8c22f5a","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/plugins/google-analytics.ejs","hash":"a947f4076b54b48d4df5baf2d5b3c39b632c7576","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/plugins/mathjax.ejs","hash":"ea603a057196de53bd6afab1fddb93d11f27eb81","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/plugins/page-visit.ejs","hash":"2decb77bf3c1a064ea6ce1d4e78892c434d9c884","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/plugins/site-visit.ejs","hash":"f2f1298f1a4f3806a426ead4f2c34b4860da7105","modified":1519352003511},{"_id":"themes/indigo/layout/_partial/plugins/tajs.ejs","hash":"97b48fe10be1c71d4ff25ccec3bd92d97466c9c5","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/plugins/uyan.ejs","hash":"e370bd04ea5cf1c83e0c20516aff7ba3ca8b2d0b","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/plugins/valine.ejs","hash":"a976ca36bd09aeb2902bf94fcc7a59975ea25148","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c7476165721a3a5e34d00d8c5c07e1e5474cd800","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"f2c6a55a88ce694b44c46c8322293172afc00255","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/copyright.ejs","hash":"5305ed30ee35cf50f87656737d0ffe85f5bfc16b","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"ea85b46e12d3b9c3612eef7aa76289a663fbc096","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"b0c680ce5b8aaf461a6731b1ff1287bd140c168a","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"11e7d504f7c7a3c4c052da13cfa8ea4862c9383e","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/reward-btn.ejs","hash":"41c242fe3159dc68cec8dd00ab6d2663f5a51179","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"23719e09689b3afbb19214c6603eb02f896cb9ba","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/share-fab.ejs","hash":"93482ad7d1e01b966f5ee1c5d12b88564e02b349","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"8df0d7bf6f8e106cdbdac2dd10a97367aa0695f8","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"b3dc38652c4a018a37418136478dcd522fc49f79","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"062d56cb88ae2be3a6616b911d4ebeffcbfe3cff","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/toc.ejs","hash":"ad287a70724eb7cd8cd2a03a45b68032ee99973d","modified":1516378983000},{"_id":"themes/indigo/layout/_partial/post/updated.ejs","hash":"5caa71745aa340ce57938a930f3b898ee7518d74","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"7d2a6886265386c640e94ffca3f042675f701a35","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"d476cd3537bcd8a02d055cc223f5c805b8638cc2","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"b7db31b9bc563c10b9e3cf3e6d9cfddfeb3e805a","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"90f0948a9182c14b1dac1e9dbed3c883543266f9","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"58492b7cdb45fe09b026b2f34e8ae69c2ddb8228","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"4390ed22abad59c8b28ed1a479a52f15b5f9cf4a","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/lightbox.less","hash":"9b961eb1d70e7658f42cf2ca895fa5e35a6b6541","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"f9d06a1e24fb4857fd18d7a0bfbb3a0ab2d1c742","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/page.less","hash":"e92ccb53e6ac73a51498c6a9672db9d0d2bc7f1a","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"1c041bf91106808e5480c60d9ece45431bb503b3","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"4857f90bb57fc22ca3f942d8934d86d5e9e82c1e","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/roboto.less","hash":"2e0469ed8161d5672d903ca1a8027cd65fe007f1","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"1d6641ae7568a0153d24beba9fd9704d2b155f6c","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"27d80bcc96a53dd1e7eaa9a7d746e4b212357302","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"959f4373fda6e45f6a4041a995ed3ea8a05a5170","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"082896b966ed25b39c74e7b007b4f54c235685a4","modified":1516378983000},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"77bfd0b373b0469eb0176167fb076ccda4edf2a7","modified":1516378983000},{"_id":"themes/indigo/source/css/_plugin/valine.less","hash":"ddbb7647d83f732f9b0d5d817d40a748006949cc","modified":1516378983000},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-3.jpg","hash":"be560f4d6a72274760033756c0c05950ee84606a","modified":1519467275749},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"ca30b732d2efbb0cd55a272ecdabc97f895aee78","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1516378983000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1516378983000}],"Category":[{"name":"前端","_id":"cjeqhmnd700041gtwwdrlu7dj"},{"name":"学习文档","_id":"cjeqhmndj00091gtwyxh4e9c8"}],"Data":[],"Page":[{"title":"categories","date":"2018-02-08T06:52:13.000Z","layout":"categories","comments":1,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-02-08 14:52:13\nlayout: categories\ncomments: categories\n---\n","updated":"2018-02-08T10:15:06.076Z","path":"categories/index.html","_id":"cjeqhmncz00011gtwz6pqkt25","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-02-08T06:49:02.000Z","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-02-08 14:49:02\nlayout: tags\ncomments: false\n---","updated":"2018-02-08T10:10:34.706Z","path":"tags/index.html","_id":"cjeqhmnd400031gtw7voijirb","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"CSS实用Tips","date":"2018-02-08T07:13:51.000Z","_content":"\n作为自己做前端开发以来的CSS爬坑总结，内容偏向PC端，不定期补充。\n只作提示，不深谈。\n\n## 盒子模型\n* a\n* b \n* c\n\n1、区分content-box和border-box的尺寸计算。\n\n2、行级元素无宽高，但可设内外边距。\n\n3、外边距margin可设负值，内边距padding不可以。\n\n4、当内外边距值为百分比时是相对于元素宽度计算的。\n\n5、border是个好玩的东西，关键字：css三角形。\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n","source":"_posts/CSS实用Tips.md","raw":"---\ntitle: CSS实用Tips\ndate: 2018-02-08 15:13:51\ntags: [HTML,CSS,JS]\ncategories : 前端\n---\n\n作为自己做前端开发以来的CSS爬坑总结，内容偏向PC端，不定期补充。\n只作提示，不深谈。\n\n## 盒子模型\n* a\n* b \n* c\n\n1、区分content-box和border-box的尺寸计算。\n\n2、行级元素无宽高，但可设内外边距。\n\n3、外边距margin可设负值，内边距padding不可以。\n\n4、当内外边距值为百分比时是相对于元素宽度计算的。\n\n5、border是个好玩的东西，关键字：css三角形。\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n","slug":"CSS实用Tips","published":1,"updated":"2018-02-24T09:19:29.710Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjeqhmncs00001gtwsx3xf8o6","content":"<p>作为自己做前端开发以来的CSS爬坑总结，内容偏向PC端，不定期补充。<br>只作提示，不深谈。</p>\n<h2 id=\"盒子模型\"><a href=\"#盒子模型\" class=\"headerlink\" title=\"盒子模型\"></a>盒子模型</h2><ul>\n<li>a</li>\n<li>b </li>\n<li>c</li>\n</ul>\n<p>1、区分content-box和border-box的尺寸计算。</p>\n<p>2、行级元素无宽高，但可设内外边距。</p>\n<p>3、外边距margin可设负值，内边距padding不可以。</p>\n<p>4、当内外边距值为百分比时是相对于元素宽度计算的。</p>\n<p>5、border是个好玩的东西，关键字：css三角形。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>作为自己做前端开发以来的CSS爬坑总结，内容偏向PC端，不定期补充。<br>只作提示，不深谈。</p>\n<h2 id=\"盒子模型\"><a href=\"#盒子模型\" class=\"headerlink\" title=\"盒子模型\"></a>盒子模型</h2><ul>\n<li>a</li>\n<li>b </li>\n<li>c</li>\n</ul>\n<p>1、区分content-box和border-box的尺寸计算。</p>\n<p>2、行级元素无宽高，但可设内外边距。</p>\n<p>3、外边距margin可设负值，内边距padding不可以。</p>\n<p>4、当内外边距值为百分比时是相对于元素宽度计算的。</p>\n<p>5、border是个好玩的东西，关键字：css三角形。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br></pre></td></tr></table></figure>\n"},{"title":"HTTP协议详解","date":"2018-03-14T02:49:05.000Z","_content":"","source":"_posts/HTTP协议详解.md","raw":"---\ntitle: HTTP协议详解\ndate: 2018-03-14 10:49:05\ntags: 前端基础\ncategories: 学习文档\n---\n","slug":"HTTP协议详解","published":1,"updated":"2018-03-14T02:49:48.696Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjeqhmnd100021gtwmp6w1j88","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"github+hexo博客的主题安装及优化","_content":"\n在[hexo官网](https://hexo.io/)有很多比较不错的主题推荐，可以在上面选择自己喜欢的主题，然后进行相应的个性化修改，这是我使用的主题indigo，通过github+hexo搭建个人博客。\n\n## 安装Hexo\n在自己认为合适的地方创建一个文件夹，这里我以E：/hexo 为例子讲解，首先在E盘目录下创建Hexo文件夹，并在命令行的窗口进入到该目录\n{% image hexo-1.jpg %}\n\n在命令行中输入：\n``` bash\nnpm install hexo-cli -g\n```\n\n然后你会看到命令行窗口刷了一大堆白字，下面我们来看一看Hexo是不是已经安装好了。 在命令行中输入：\n``` bash\nhexo -v\n```\n{% image hexo-2.png %}\n\n## hexo的相关配置\n\n### 初始化Hexo\n``` bash\nhexo init\n```\n然后输入：\n``` bash\nnpm install\n```\n之后npm将会自动安装你需要的组件，只需要等待npm操作即可。\n\n### 首次体验Hexo\n``` bash\nhexo g\nhexo s\n```\n在浏览器中打开http://localhost:4000/，你将会看到：\n{% image hexo-3.jpg %}\n  \n\n### 安装主题\n选择一款自己喜欢的主题，这将成为你个人博客模版。[这里是主题安装的教程](https://github.com/yscoder/hexo-theme-indigo/wiki/%E5%AE%89%E8%A3%85)，下面是我安装时的经验及个人见解。\n安装需确认你的 Hexo 版本在 3.0 以上，以及 Node 版本为 6.x 以上，在 Hexo 根目录，执行以下命令。\n``` bash\n    git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo\n```\n>这个命令要在博客文件夹的根目录右击鼠标打开Git Bash输入命令，其中themes/indigo就是会在博客文件夹根目录中的themes新建一个indigo文件夹存放clone下来的主题，以后的主题通常都是存放在这个目录下。\n通俗来说就是这样git clone +通过主题的github中获取的URL+ +themes/indigo\n\n\n## 将Hexo与Github page联系起来\n设置Git的user name和email（如果是第一次的话）\n\n{% image hexo-4.png %}\n\n上图是在其文件夹里面鼠标右键，点击Git Base Here。这里“feng”可以替换成自己的用户名，邮箱可以替换成自己的邮箱\n\n输入cd ~/.ssh，检查是否由.ssh的文件夹\n\n{% image hexo-5.png %}\n\n输入ls，列出该文件下的内容。下图说明存在\n\n{% image hexo-6.png %}\n\n输入ssh-keygen -t rsa -C “929762930@qq.com”，连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\\Users\\Administrator\\.ssh）。\n\n{% image hexo-7.png %}\n\n输入eval \"$(ssh-agent -s)\"，添加密钥到ssh-agent\n\n{% image hexo-8.png %}\n\n再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent\n\n{% image hexo-9.png %}\n\n登录[github官网](https://github.com/)账号，点击头像下的settings，添加ssh\n\n{% image hexo-10.png %}\n\n新建一个new ssh key，将id_rsa.pub文件里的内容复制上去\n\n{% image hexo-11.png %}\n\n输入ssh -T git@github.com，测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了\n\n{% image hexo-12.png %}\n\n>问题：假如ssh-key配置失败，那么只要以下步骤就能完全解决\n\n>首先，清除所有的key-pair\nssh-add -D\nrm -r ~/.ssh\n删除你在github中的public-key\n\n>重新生成ssh密钥对\nssh-keygen -t rsa -C \"xxx@xxx.com\"\n\n>接下来正常操作\n在github上添加公钥public-key:\n1、首先在你的终端运行 xclip -sel c ~/.ssh/id_rsa.pub将公钥内容复制到剪切板\n2、在github上添加公钥时，直接复制即可\n3、保存\n\n>测试：\n在终端 ssh -T git@github.com\n\n配置Deployment，在其文件夹中，找到_config.yml文件，修改repo值（在末尾）\n\n{% image hexo-13.png %}\n\nrepo值是你在github项目里的ssh（右下角）\n\n{% image hexo-14.png %}\n\n新建一篇博客，在cmd执行命令：hexo new post “博客名”\n\n需要安装一个扩展：\n```\nnpm install hexo-deployer-git --save\n```\n\n那么就可以使用命令：hexo d -g，生成以及部署了\n部署成功后访问你的地址：\"http://用户名.github.io \"。那么将看到生成的文章","source":"_posts/github+hexo博客的主题安装及优化.md","raw":"---\ntitle: github+hexo博客的主题安装及优化\ntags: Hexo\ncategories : 学习文档\n---\n\n在[hexo官网](https://hexo.io/)有很多比较不错的主题推荐，可以在上面选择自己喜欢的主题，然后进行相应的个性化修改，这是我使用的主题indigo，通过github+hexo搭建个人博客。\n\n## 安装Hexo\n在自己认为合适的地方创建一个文件夹，这里我以E：/hexo 为例子讲解，首先在E盘目录下创建Hexo文件夹，并在命令行的窗口进入到该目录\n{% image hexo-1.jpg %}\n\n在命令行中输入：\n``` bash\nnpm install hexo-cli -g\n```\n\n然后你会看到命令行窗口刷了一大堆白字，下面我们来看一看Hexo是不是已经安装好了。 在命令行中输入：\n``` bash\nhexo -v\n```\n{% image hexo-2.png %}\n\n## hexo的相关配置\n\n### 初始化Hexo\n``` bash\nhexo init\n```\n然后输入：\n``` bash\nnpm install\n```\n之后npm将会自动安装你需要的组件，只需要等待npm操作即可。\n\n### 首次体验Hexo\n``` bash\nhexo g\nhexo s\n```\n在浏览器中打开http://localhost:4000/，你将会看到：\n{% image hexo-3.jpg %}\n  \n\n### 安装主题\n选择一款自己喜欢的主题，这将成为你个人博客模版。[这里是主题安装的教程](https://github.com/yscoder/hexo-theme-indigo/wiki/%E5%AE%89%E8%A3%85)，下面是我安装时的经验及个人见解。\n安装需确认你的 Hexo 版本在 3.0 以上，以及 Node 版本为 6.x 以上，在 Hexo 根目录，执行以下命令。\n``` bash\n    git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo\n```\n>这个命令要在博客文件夹的根目录右击鼠标打开Git Bash输入命令，其中themes/indigo就是会在博客文件夹根目录中的themes新建一个indigo文件夹存放clone下来的主题，以后的主题通常都是存放在这个目录下。\n通俗来说就是这样git clone +通过主题的github中获取的URL+ +themes/indigo\n\n\n## 将Hexo与Github page联系起来\n设置Git的user name和email（如果是第一次的话）\n\n{% image hexo-4.png %}\n\n上图是在其文件夹里面鼠标右键，点击Git Base Here。这里“feng”可以替换成自己的用户名，邮箱可以替换成自己的邮箱\n\n输入cd ~/.ssh，检查是否由.ssh的文件夹\n\n{% image hexo-5.png %}\n\n输入ls，列出该文件下的内容。下图说明存在\n\n{% image hexo-6.png %}\n\n输入ssh-keygen -t rsa -C “929762930@qq.com”，连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\\Users\\Administrator\\.ssh）。\n\n{% image hexo-7.png %}\n\n输入eval \"$(ssh-agent -s)\"，添加密钥到ssh-agent\n\n{% image hexo-8.png %}\n\n再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent\n\n{% image hexo-9.png %}\n\n登录[github官网](https://github.com/)账号，点击头像下的settings，添加ssh\n\n{% image hexo-10.png %}\n\n新建一个new ssh key，将id_rsa.pub文件里的内容复制上去\n\n{% image hexo-11.png %}\n\n输入ssh -T git@github.com，测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了\n\n{% image hexo-12.png %}\n\n>问题：假如ssh-key配置失败，那么只要以下步骤就能完全解决\n\n>首先，清除所有的key-pair\nssh-add -D\nrm -r ~/.ssh\n删除你在github中的public-key\n\n>重新生成ssh密钥对\nssh-keygen -t rsa -C \"xxx@xxx.com\"\n\n>接下来正常操作\n在github上添加公钥public-key:\n1、首先在你的终端运行 xclip -sel c ~/.ssh/id_rsa.pub将公钥内容复制到剪切板\n2、在github上添加公钥时，直接复制即可\n3、保存\n\n>测试：\n在终端 ssh -T git@github.com\n\n配置Deployment，在其文件夹中，找到_config.yml文件，修改repo值（在末尾）\n\n{% image hexo-13.png %}\n\nrepo值是你在github项目里的ssh（右下角）\n\n{% image hexo-14.png %}\n\n新建一篇博客，在cmd执行命令：hexo new post “博客名”\n\n需要安装一个扩展：\n```\nnpm install hexo-deployer-git --save\n```\n\n那么就可以使用命令：hexo d -g，生成以及部署了\n部署成功后访问你的地址：\"http://用户名.github.io \"。那么将看到生成的文章","slug":"github+hexo博客的主题安装及优化","published":1,"date":"2018-02-24T06:58:44.461Z","updated":"2018-02-24T10:49:40.951Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjeqhmnda00061gtwrexm9sel","content":"<p>在<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">hexo官网</a>有很多比较不错的主题推荐，可以在上面选择自己喜欢的主题，然后进行相应的个性化修改，这是我使用的主题indigo，通过github+hexo搭建个人博客。</p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>在自己认为合适的地方创建一个文件夹，这里我以E：/hexo 为例子讲解，首先在E盘目录下创建Hexo文件夹，并在命令行的窗口进入到该目录<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-1.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n<p>在命令行中输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p>\n<p>然后你会看到命令行窗口刷了一大堆白字，下面我们来看一看Hexo是不是已经安装好了。 在命令行中输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-2.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h2 id=\"hexo的相关配置\"><a href=\"#hexo的相关配置\" class=\"headerlink\" title=\"hexo的相关配置\"></a>hexo的相关配置</h2><h3 id=\"初始化Hexo\"><a href=\"#初始化Hexo\" class=\"headerlink\" title=\"初始化Hexo\"></a>初始化Hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>然后输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></p>\n<p>之后npm将会自动安装你需要的组件，只需要等待npm操作即可。</p>\n<h3 id=\"首次体验Hexo\"><a href=\"#首次体验Hexo\" class=\"headerlink\" title=\"首次体验Hexo\"></a>首次体验Hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>在浏览器中打开<a href=\"http://localhost:4000/，你将会看到：\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/，你将会看到：</a><br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-3.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n<h3 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h3><p>选择一款自己喜欢的主题，这将成为你个人博客模版。<a href=\"https://github.com/yscoder/hexo-theme-indigo/wiki/%E5%AE%89%E8%A3%85\" target=\"_blank\" rel=\"noopener\">这里是主题安装的教程</a>，下面是我安装时的经验及个人见解。<br>安装需确认你的 Hexo 版本在 3.0 以上，以及 Node 版本为 6.x 以上，在 Hexo 根目录，执行以下命令。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>这个命令要在博客文件夹的根目录右击鼠标打开Git Bash输入命令，其中themes/indigo就是会在博客文件夹根目录中的themes新建一个indigo文件夹存放clone下来的主题，以后的主题通常都是存放在这个目录下。<br>通俗来说就是这样git clone +通过主题的github中获取的URL+ +themes/indigo</p>\n</blockquote>\n<h2 id=\"将Hexo与Github-page联系起来\"><a href=\"#将Hexo与Github-page联系起来\" class=\"headerlink\" title=\"将Hexo与Github page联系起来\"></a>将Hexo与Github page联系起来</h2><p>设置Git的user name和email（如果是第一次的话）</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-4.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>上图是在其文件夹里面鼠标右键，点击Git Base Here。这里“feng”可以替换成自己的用户名，邮箱可以替换成自己的邮箱</p>\n<p>输入cd ~/.ssh，检查是否由.ssh的文件夹</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-5.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>输入ls，列出该文件下的内容。下图说明存在</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-6.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>输入ssh-keygen -t rsa -C “929762930@qq.com”，连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\\Users\\Administrator.ssh）。</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-7.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>输入eval “$(ssh-agent -s)”，添加密钥到ssh-agent</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-8.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-9.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>登录<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github官网</a>账号，点击头像下的settings，添加ssh</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-10.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>新建一个new ssh key，将id_rsa.pub文件里的内容复制上去</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-11.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>输入ssh -T git@github.com，测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-12.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<blockquote>\n<p>问题：假如ssh-key配置失败，那么只要以下步骤就能完全解决</p>\n<p>首先，清除所有的key-pair<br>ssh-add -D<br>rm -r ~/.ssh<br>删除你在github中的public-key</p>\n<p>重新生成ssh密钥对<br>ssh-keygen -t rsa -C “xxx@xxx.com”</p>\n<p>接下来正常操作<br>在github上添加公钥public-key:<br>1、首先在你的终端运行 xclip -sel c ~/.ssh/id_rsa.pub将公钥内容复制到剪切板<br>2、在github上添加公钥时，直接复制即可<br>3、保存</p>\n<p>测试：<br>在终端 ssh -T git@github.com</p>\n</blockquote>\n<p>配置Deployment，在其文件夹中，找到_config.yml文件，修改repo值（在末尾）</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-13.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>repo值是你在github项目里的ssh（右下角）</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-14.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>新建一篇博客，在cmd执行命令：hexo new post “博客名”</p>\n<p>需要安装一个扩展：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>\n<p>那么就可以使用命令：hexo d -g，生成以及部署了<br>部署成功后访问你的地址：”<a href=\"http://用户名.github.io\" target=\"_blank\" rel=\"noopener\">http://用户名.github.io</a> “。那么将看到生成的文章</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">hexo官网</a>有很多比较不错的主题推荐，可以在上面选择自己喜欢的主题，然后进行相应的个性化修改，这是我使用的主题indigo，通过github+hexo搭建个人博客。</p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>在自己认为合适的地方创建一个文件夹，这里我以E：/hexo 为例子讲解，首先在E盘目录下创建Hexo文件夹，并在命令行的窗口进入到该目录<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-1.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n<p>在命令行中输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p>\n<p>然后你会看到命令行窗口刷了一大堆白字，下面我们来看一看Hexo是不是已经安装好了。 在命令行中输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-2.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h2 id=\"hexo的相关配置\"><a href=\"#hexo的相关配置\" class=\"headerlink\" title=\"hexo的相关配置\"></a>hexo的相关配置</h2><h3 id=\"初始化Hexo\"><a href=\"#初始化Hexo\" class=\"headerlink\" title=\"初始化Hexo\"></a>初始化Hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>然后输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></p>\n<p>之后npm将会自动安装你需要的组件，只需要等待npm操作即可。</p>\n<h3 id=\"首次体验Hexo\"><a href=\"#首次体验Hexo\" class=\"headerlink\" title=\"首次体验Hexo\"></a>首次体验Hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>在浏览器中打开<a href=\"http://localhost:4000/，你将会看到：\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/，你将会看到：</a><br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-3.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n<h3 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h3><p>选择一款自己喜欢的主题，这将成为你个人博客模版。<a href=\"https://github.com/yscoder/hexo-theme-indigo/wiki/%E5%AE%89%E8%A3%85\" target=\"_blank\" rel=\"noopener\">这里是主题安装的教程</a>，下面是我安装时的经验及个人见解。<br>安装需确认你的 Hexo 版本在 3.0 以上，以及 Node 版本为 6.x 以上，在 Hexo 根目录，执行以下命令。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>这个命令要在博客文件夹的根目录右击鼠标打开Git Bash输入命令，其中themes/indigo就是会在博客文件夹根目录中的themes新建一个indigo文件夹存放clone下来的主题，以后的主题通常都是存放在这个目录下。<br>通俗来说就是这样git clone +通过主题的github中获取的URL+ +themes/indigo</p>\n</blockquote>\n<h2 id=\"将Hexo与Github-page联系起来\"><a href=\"#将Hexo与Github-page联系起来\" class=\"headerlink\" title=\"将Hexo与Github page联系起来\"></a>将Hexo与Github page联系起来</h2><p>设置Git的user name和email（如果是第一次的话）</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-4.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>上图是在其文件夹里面鼠标右键，点击Git Base Here。这里“feng”可以替换成自己的用户名，邮箱可以替换成自己的邮箱</p>\n<p>输入cd ~/.ssh，检查是否由.ssh的文件夹</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-5.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>输入ls，列出该文件下的内容。下图说明存在</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-6.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>输入ssh-keygen -t rsa -C “929762930@qq.com”，连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\\Users\\Administrator.ssh）。</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-7.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>输入eval “$(ssh-agent -s)”，添加密钥到ssh-agent</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-8.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-9.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>登录<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github官网</a>账号，点击头像下的settings，添加ssh</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-10.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>新建一个new ssh key，将id_rsa.pub文件里的内容复制上去</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-11.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>输入ssh -T git@github.com，测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-12.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<blockquote>\n<p>问题：假如ssh-key配置失败，那么只要以下步骤就能完全解决</p>\n<p>首先，清除所有的key-pair<br>ssh-add -D<br>rm -r ~/.ssh<br>删除你在github中的public-key</p>\n<p>重新生成ssh密钥对<br>ssh-keygen -t rsa -C “xxx@xxx.com”</p>\n<p>接下来正常操作<br>在github上添加公钥public-key:<br>1、首先在你的终端运行 xclip -sel c ~/.ssh/id_rsa.pub将公钥内容复制到剪切板<br>2、在github上添加公钥时，直接复制即可<br>3、保存</p>\n<p>测试：<br>在终端 ssh -T git@github.com</p>\n</blockquote>\n<p>配置Deployment，在其文件夹中，找到_config.yml文件，修改repo值（在末尾）</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-13.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>repo值是你在github项目里的ssh（右下角）</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"hexo-14.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>新建一篇博客，在cmd执行命令：hexo new post “博客名”</p>\n<p>需要安装一个扩展：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>\n<p>那么就可以使用命令：hexo d -g，生成以及部署了<br>部署成功后访问你的地址：”<a href=\"http://用户名.github.io\" target=\"_blank\" rel=\"noopener\">http://用户名.github.io</a> “。那么将看到生成的文章</p>\n"},{"title":"前端基础知识","date":"2018-03-02T05:32:31.000Z","_content":"## 理论知识\n\n### 网络七层协议\n从上到下：\n * 7 应用层 —— 允许访问OSI环境的手段（应用协议数据单元APDU）\n * 6 表示层 —— 对数据进行翻译、加密和压缩（表示协议数据单元PPDU）\n * 5 会话层 —— 建立、管理和终止会话（会话协议数据单元SPDU）\n * 4 传输层 —— 提供端到端的可靠报文传递和错误恢复（段Segment）\n * 3 网络层 —— 负责数据包从源到宿的传递和网际互连（包PackeT）\n * 2 数据链路层 —— 将比特组装成帧和点到点的传递（帧Frame）\n * 1 物理层 —— 通过媒介传输比特,确定机械及电气规范（比特Bit）\n \n### 304缓存的原理\n服务器首先产生ETag，服务器可在稍后使用它来判断页面是否已经被修改。本质上，客户端通过将该记号传回服务器要求服务器验证其（客户端）缓存。\n\n304是HTTP状态码，服务器用来标识这个文件没修改，不返回内容，浏览器在接收到个状态码后，会使用浏览器已缓存的文件\n\n客户端请求一个页面（A）。 服务器返回页面A，并在给A加上一个ETag。 客户端展现该页面，并将页面连同ETag一起缓存。 客户再次请求页面A，并将上次请求时服务器返回的ETag一起传递给服务器。 服务器检查该ETag，并判断出该页面自上次客户端请求之后还未被修改，直接返回响应304（未修改——Not Modified）和一个空的响应体。\n\n### 什么是Etag？\n当发送一个服务器请求时，浏览器首先会进行缓存过期判断。浏览器根据缓存过期时间判断缓存文件是否过期。\n情景一：若没有过期，则不向服务器发送请求，直接使用缓存中的结果，此时我们在浏览器控制台中可以看到 200 OK(from cache) ，此时的情况就是完全使用缓存，浏览器和服务器没有任何交互的。\n\n情景二：若已过期，则向服务器发送请求，此时请求中会带上①中设置的文件修改时间，和Etag\n\n然后，进行资源更新判断。服务器根据浏览器传过来的文件修改时间，判断自浏览器上一次请求之后，文件是不是没有被修改过；根据Etag，判断文件内容自上一次请求之后，有没有发生变化\n\n情形一：若两种判断的结论都是文件没有被修改过，则服务器就不给浏览器发index.html的内容了，直接告诉它，文件没有被修改过，你用你那边的缓存吧—— 304 Not Modified，此时浏览器就会从本地缓存中获取index.html的内容。此时的情况叫协议缓存，浏览器和服务器之间有一次请求交互。\n情形二：若修改时间和文件内容判断有任意一个没有通过，则服务器会受理此次请求，之后的操作同①\n\n\n① 只有get请求会被缓存，post请求不会\n\nExpires和Cache-Control\n\nExpires要求客户端和服务端的时钟严格同步。HTTP1.1引入Cache-Control来克服Expires头的限制。如果max-age和Expires同时出现，则max-age有更高的优先级。\n\n    Cache-Control: no-cache, private, max-age=0\n\n    ETag: abcde\n\n    Expires: Thu, 15 Apr 2014 20:00:00 GMT\n\n    Pragma: private\n\n    Last-Modified: $now // RFC1123 format\n\nETag应用:\n\nEtag由服务器端生成，客户端通过If-Match或者说If-None-Match这个条件判断请求来验证资源是否修改。常见的是使用If-None-Match。请求一个文件的流程可能如下：\n\n====第一次请求===\n\n1.客户端发起 HTTP GET 请求一个文件；\n\n2.服务器处理请求，返回文件内容和一堆Header，当然包括Etag(例如\"2e681a-6-5d044840\")(假设服务器支持Etag生成和已经开启了Etag).状态码200\n====第二次请求===\n\n客户端发起 HTTP GET 请求一个文件，注意这个时候客户端同时发送一个If-None-Match头，这个头的内容就是第一次请求时服务器返回的Etag：2e681a-6-5d0448402.服务器判断发送过来的Etag和计算出来的Etag匹配，因此If-None-Match为False，不返回200，返回304，客户端继续使用本地缓存；流程很简单，问题是，如果服务器又设置了Cache-Control:max-age和Expires呢，怎么办\n答案是同时使用，也就是说在完全匹配If-Modified-Since和If-None-Match即检查完修改时间和Etag之后，\n\n服务器才能返回304.(不要陷入到底使用谁的问题怪圈)\n\n为什么使用Etag请求头?\n\nEtag 主要为了解决 Last-Modified 无法解决的一些问题。\n\n\n### Javascript垃圾回收方法\n>标记清除（mark and sweep）\n\n这是JavaScript最常见的垃圾回收方式，当变量进入执行环境的时候，比如函数中声明一个变量，垃圾回收器将其标记为“进入环境”，当变量离开环境的时候（函数执行结束）将其标记为“离开环境”。\n\n垃圾回收器会在运行的时候给存储在内存中的所有变量加上标记，然后去掉环境中的变量以及被环境中变量所引用的变量（闭包），在这些完成之后仍存在标记的就是要删除的变量了\n\n>引用计数(reference counting)\n\n在低版本IE中经常会出现内存泄露，很多时候就是因为其采用引用计数方式进行垃圾回收。引用计数的策略是跟踪记录每个值被使用的次数，当声明了一个 变量并将一个引用类型赋值给该变量的时候这个值的引用次数就加1，如果该变量的值变成了另外一个，则这个值得引用次数减1，当这个值的引用次数变为0的时 候，说明没有变量在使用，这个值没法被访问了，因此可以将其占用的空间回收，这样垃圾回收器会在运行的时候清理掉引用次数为0的值占用的空间。\n\n在IE中虽然JavaScript对象通过标记清除的方式进行垃圾回收，但BOM与DOM对象却是通过引用计数回收垃圾的， \n也就是说只要涉及BOM及DOM就会出现循环引用问题。\n","source":"_posts/前端基础知识.md","raw":"---\ntitle: 前端基础知识\ndate: 2018-03-02 13:32:31\ntags: [HTML,CSS,JS]\ncategories: 学习文档\n---\n## 理论知识\n\n### 网络七层协议\n从上到下：\n * 7 应用层 —— 允许访问OSI环境的手段（应用协议数据单元APDU）\n * 6 表示层 —— 对数据进行翻译、加密和压缩（表示协议数据单元PPDU）\n * 5 会话层 —— 建立、管理和终止会话（会话协议数据单元SPDU）\n * 4 传输层 —— 提供端到端的可靠报文传递和错误恢复（段Segment）\n * 3 网络层 —— 负责数据包从源到宿的传递和网际互连（包PackeT）\n * 2 数据链路层 —— 将比特组装成帧和点到点的传递（帧Frame）\n * 1 物理层 —— 通过媒介传输比特,确定机械及电气规范（比特Bit）\n \n### 304缓存的原理\n服务器首先产生ETag，服务器可在稍后使用它来判断页面是否已经被修改。本质上，客户端通过将该记号传回服务器要求服务器验证其（客户端）缓存。\n\n304是HTTP状态码，服务器用来标识这个文件没修改，不返回内容，浏览器在接收到个状态码后，会使用浏览器已缓存的文件\n\n客户端请求一个页面（A）。 服务器返回页面A，并在给A加上一个ETag。 客户端展现该页面，并将页面连同ETag一起缓存。 客户再次请求页面A，并将上次请求时服务器返回的ETag一起传递给服务器。 服务器检查该ETag，并判断出该页面自上次客户端请求之后还未被修改，直接返回响应304（未修改——Not Modified）和一个空的响应体。\n\n### 什么是Etag？\n当发送一个服务器请求时，浏览器首先会进行缓存过期判断。浏览器根据缓存过期时间判断缓存文件是否过期。\n情景一：若没有过期，则不向服务器发送请求，直接使用缓存中的结果，此时我们在浏览器控制台中可以看到 200 OK(from cache) ，此时的情况就是完全使用缓存，浏览器和服务器没有任何交互的。\n\n情景二：若已过期，则向服务器发送请求，此时请求中会带上①中设置的文件修改时间，和Etag\n\n然后，进行资源更新判断。服务器根据浏览器传过来的文件修改时间，判断自浏览器上一次请求之后，文件是不是没有被修改过；根据Etag，判断文件内容自上一次请求之后，有没有发生变化\n\n情形一：若两种判断的结论都是文件没有被修改过，则服务器就不给浏览器发index.html的内容了，直接告诉它，文件没有被修改过，你用你那边的缓存吧—— 304 Not Modified，此时浏览器就会从本地缓存中获取index.html的内容。此时的情况叫协议缓存，浏览器和服务器之间有一次请求交互。\n情形二：若修改时间和文件内容判断有任意一个没有通过，则服务器会受理此次请求，之后的操作同①\n\n\n① 只有get请求会被缓存，post请求不会\n\nExpires和Cache-Control\n\nExpires要求客户端和服务端的时钟严格同步。HTTP1.1引入Cache-Control来克服Expires头的限制。如果max-age和Expires同时出现，则max-age有更高的优先级。\n\n    Cache-Control: no-cache, private, max-age=0\n\n    ETag: abcde\n\n    Expires: Thu, 15 Apr 2014 20:00:00 GMT\n\n    Pragma: private\n\n    Last-Modified: $now // RFC1123 format\n\nETag应用:\n\nEtag由服务器端生成，客户端通过If-Match或者说If-None-Match这个条件判断请求来验证资源是否修改。常见的是使用If-None-Match。请求一个文件的流程可能如下：\n\n====第一次请求===\n\n1.客户端发起 HTTP GET 请求一个文件；\n\n2.服务器处理请求，返回文件内容和一堆Header，当然包括Etag(例如\"2e681a-6-5d044840\")(假设服务器支持Etag生成和已经开启了Etag).状态码200\n====第二次请求===\n\n客户端发起 HTTP GET 请求一个文件，注意这个时候客户端同时发送一个If-None-Match头，这个头的内容就是第一次请求时服务器返回的Etag：2e681a-6-5d0448402.服务器判断发送过来的Etag和计算出来的Etag匹配，因此If-None-Match为False，不返回200，返回304，客户端继续使用本地缓存；流程很简单，问题是，如果服务器又设置了Cache-Control:max-age和Expires呢，怎么办\n答案是同时使用，也就是说在完全匹配If-Modified-Since和If-None-Match即检查完修改时间和Etag之后，\n\n服务器才能返回304.(不要陷入到底使用谁的问题怪圈)\n\n为什么使用Etag请求头?\n\nEtag 主要为了解决 Last-Modified 无法解决的一些问题。\n\n\n### Javascript垃圾回收方法\n>标记清除（mark and sweep）\n\n这是JavaScript最常见的垃圾回收方式，当变量进入执行环境的时候，比如函数中声明一个变量，垃圾回收器将其标记为“进入环境”，当变量离开环境的时候（函数执行结束）将其标记为“离开环境”。\n\n垃圾回收器会在运行的时候给存储在内存中的所有变量加上标记，然后去掉环境中的变量以及被环境中变量所引用的变量（闭包），在这些完成之后仍存在标记的就是要删除的变量了\n\n>引用计数(reference counting)\n\n在低版本IE中经常会出现内存泄露，很多时候就是因为其采用引用计数方式进行垃圾回收。引用计数的策略是跟踪记录每个值被使用的次数，当声明了一个 变量并将一个引用类型赋值给该变量的时候这个值的引用次数就加1，如果该变量的值变成了另外一个，则这个值得引用次数减1，当这个值的引用次数变为0的时 候，说明没有变量在使用，这个值没法被访问了，因此可以将其占用的空间回收，这样垃圾回收器会在运行的时候清理掉引用次数为0的值占用的空间。\n\n在IE中虽然JavaScript对象通过标记清除的方式进行垃圾回收，但BOM与DOM对象却是通过引用计数回收垃圾的， \n也就是说只要涉及BOM及DOM就会出现循环引用问题。\n","slug":"前端基础知识","published":1,"updated":"2018-03-14T02:45:20.488Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjeqhmndc00071gtw8o9kphh0","content":"<h2 id=\"理论知识\"><a href=\"#理论知识\" class=\"headerlink\" title=\"理论知识\"></a>理论知识</h2><h3 id=\"网络七层协议\"><a href=\"#网络七层协议\" class=\"headerlink\" title=\"网络七层协议\"></a>网络七层协议</h3><p>从上到下：</p>\n<ul>\n<li>7 应用层 —— 允许访问OSI环境的手段（应用协议数据单元APDU）</li>\n<li>6 表示层 —— 对数据进行翻译、加密和压缩（表示协议数据单元PPDU）</li>\n<li>5 会话层 —— 建立、管理和终止会话（会话协议数据单元SPDU）</li>\n<li>4 传输层 —— 提供端到端的可靠报文传递和错误恢复（段Segment）</li>\n<li>3 网络层 —— 负责数据包从源到宿的传递和网际互连（包PackeT）</li>\n<li>2 数据链路层 —— 将比特组装成帧和点到点的传递（帧Frame）</li>\n<li>1 物理层 —— 通过媒介传输比特,确定机械及电气规范（比特Bit）</li>\n</ul>\n<h3 id=\"304缓存的原理\"><a href=\"#304缓存的原理\" class=\"headerlink\" title=\"304缓存的原理\"></a>304缓存的原理</h3><p>服务器首先产生ETag，服务器可在稍后使用它来判断页面是否已经被修改。本质上，客户端通过将该记号传回服务器要求服务器验证其（客户端）缓存。</p>\n<p>304是HTTP状态码，服务器用来标识这个文件没修改，不返回内容，浏览器在接收到个状态码后，会使用浏览器已缓存的文件</p>\n<p>客户端请求一个页面（A）。 服务器返回页面A，并在给A加上一个ETag。 客户端展现该页面，并将页面连同ETag一起缓存。 客户再次请求页面A，并将上次请求时服务器返回的ETag一起传递给服务器。 服务器检查该ETag，并判断出该页面自上次客户端请求之后还未被修改，直接返回响应304（未修改——Not Modified）和一个空的响应体。</p>\n<h3 id=\"什么是Etag？\"><a href=\"#什么是Etag？\" class=\"headerlink\" title=\"什么是Etag？\"></a>什么是Etag？</h3><p>当发送一个服务器请求时，浏览器首先会进行缓存过期判断。浏览器根据缓存过期时间判断缓存文件是否过期。<br>情景一：若没有过期，则不向服务器发送请求，直接使用缓存中的结果，此时我们在浏览器控制台中可以看到 200 OK(from cache) ，此时的情况就是完全使用缓存，浏览器和服务器没有任何交互的。</p>\n<p>情景二：若已过期，则向服务器发送请求，此时请求中会带上①中设置的文件修改时间，和Etag</p>\n<p>然后，进行资源更新判断。服务器根据浏览器传过来的文件修改时间，判断自浏览器上一次请求之后，文件是不是没有被修改过；根据Etag，判断文件内容自上一次请求之后，有没有发生变化</p>\n<p>情形一：若两种判断的结论都是文件没有被修改过，则服务器就不给浏览器发index.html的内容了，直接告诉它，文件没有被修改过，你用你那边的缓存吧—— 304 Not Modified，此时浏览器就会从本地缓存中获取index.html的内容。此时的情况叫协议缓存，浏览器和服务器之间有一次请求交互。<br>情形二：若修改时间和文件内容判断有任意一个没有通过，则服务器会受理此次请求，之后的操作同①</p>\n<p>① 只有get请求会被缓存，post请求不会</p>\n<p>Expires和Cache-Control</p>\n<p>Expires要求客户端和服务端的时钟严格同步。HTTP1.1引入Cache-Control来克服Expires头的限制。如果max-age和Expires同时出现，则max-age有更高的优先级。</p>\n<pre><code>Cache-Control: no-cache, private, max-age=0\n\nETag: abcde\n\nExpires: Thu, 15 Apr 2014 20:00:00 GMT\n\nPragma: private\n\nLast-Modified: $now // RFC1123 format\n</code></pre><p>ETag应用:</p>\n<p>Etag由服务器端生成，客户端通过If-Match或者说If-None-Match这个条件判断请求来验证资源是否修改。常见的是使用If-None-Match。请求一个文件的流程可能如下：</p>\n<p>====第一次请求===</p>\n<p>1.客户端发起 HTTP GET 请求一个文件；</p>\n<p>2.服务器处理请求，返回文件内容和一堆Header，当然包括Etag(例如”2e681a-6-5d044840”)(假设服务器支持Etag生成和已经开启了Etag).状态码200<br>====第二次请求===</p>\n<p>客户端发起 HTTP GET 请求一个文件，注意这个时候客户端同时发送一个If-None-Match头，这个头的内容就是第一次请求时服务器返回的Etag：2e681a-6-5d0448402.服务器判断发送过来的Etag和计算出来的Etag匹配，因此If-None-Match为False，不返回200，返回304，客户端继续使用本地缓存；流程很简单，问题是，如果服务器又设置了Cache-Control:max-age和Expires呢，怎么办<br>答案是同时使用，也就是说在完全匹配If-Modified-Since和If-None-Match即检查完修改时间和Etag之后，</p>\n<p>服务器才能返回304.(不要陷入到底使用谁的问题怪圈)</p>\n<p>为什么使用Etag请求头?</p>\n<p>Etag 主要为了解决 Last-Modified 无法解决的一些问题。</p>\n<h3 id=\"Javascript垃圾回收方法\"><a href=\"#Javascript垃圾回收方法\" class=\"headerlink\" title=\"Javascript垃圾回收方法\"></a>Javascript垃圾回收方法</h3><blockquote>\n<p>标记清除（mark and sweep）</p>\n</blockquote>\n<p>这是JavaScript最常见的垃圾回收方式，当变量进入执行环境的时候，比如函数中声明一个变量，垃圾回收器将其标记为“进入环境”，当变量离开环境的时候（函数执行结束）将其标记为“离开环境”。</p>\n<p>垃圾回收器会在运行的时候给存储在内存中的所有变量加上标记，然后去掉环境中的变量以及被环境中变量所引用的变量（闭包），在这些完成之后仍存在标记的就是要删除的变量了</p>\n<blockquote>\n<p>引用计数(reference counting)</p>\n</blockquote>\n<p>在低版本IE中经常会出现内存泄露，很多时候就是因为其采用引用计数方式进行垃圾回收。引用计数的策略是跟踪记录每个值被使用的次数，当声明了一个 变量并将一个引用类型赋值给该变量的时候这个值的引用次数就加1，如果该变量的值变成了另外一个，则这个值得引用次数减1，当这个值的引用次数变为0的时 候，说明没有变量在使用，这个值没法被访问了，因此可以将其占用的空间回收，这样垃圾回收器会在运行的时候清理掉引用次数为0的值占用的空间。</p>\n<p>在IE中虽然JavaScript对象通过标记清除的方式进行垃圾回收，但BOM与DOM对象却是通过引用计数回收垃圾的，<br>也就是说只要涉及BOM及DOM就会出现循环引用问题。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"理论知识\"><a href=\"#理论知识\" class=\"headerlink\" title=\"理论知识\"></a>理论知识</h2><h3 id=\"网络七层协议\"><a href=\"#网络七层协议\" class=\"headerlink\" title=\"网络七层协议\"></a>网络七层协议</h3><p>从上到下：</p>\n<ul>\n<li>7 应用层 —— 允许访问OSI环境的手段（应用协议数据单元APDU）</li>\n<li>6 表示层 —— 对数据进行翻译、加密和压缩（表示协议数据单元PPDU）</li>\n<li>5 会话层 —— 建立、管理和终止会话（会话协议数据单元SPDU）</li>\n<li>4 传输层 —— 提供端到端的可靠报文传递和错误恢复（段Segment）</li>\n<li>3 网络层 —— 负责数据包从源到宿的传递和网际互连（包PackeT）</li>\n<li>2 数据链路层 —— 将比特组装成帧和点到点的传递（帧Frame）</li>\n<li>1 物理层 —— 通过媒介传输比特,确定机械及电气规范（比特Bit）</li>\n</ul>\n<h3 id=\"304缓存的原理\"><a href=\"#304缓存的原理\" class=\"headerlink\" title=\"304缓存的原理\"></a>304缓存的原理</h3><p>服务器首先产生ETag，服务器可在稍后使用它来判断页面是否已经被修改。本质上，客户端通过将该记号传回服务器要求服务器验证其（客户端）缓存。</p>\n<p>304是HTTP状态码，服务器用来标识这个文件没修改，不返回内容，浏览器在接收到个状态码后，会使用浏览器已缓存的文件</p>\n<p>客户端请求一个页面（A）。 服务器返回页面A，并在给A加上一个ETag。 客户端展现该页面，并将页面连同ETag一起缓存。 客户再次请求页面A，并将上次请求时服务器返回的ETag一起传递给服务器。 服务器检查该ETag，并判断出该页面自上次客户端请求之后还未被修改，直接返回响应304（未修改——Not Modified）和一个空的响应体。</p>\n<h3 id=\"什么是Etag？\"><a href=\"#什么是Etag？\" class=\"headerlink\" title=\"什么是Etag？\"></a>什么是Etag？</h3><p>当发送一个服务器请求时，浏览器首先会进行缓存过期判断。浏览器根据缓存过期时间判断缓存文件是否过期。<br>情景一：若没有过期，则不向服务器发送请求，直接使用缓存中的结果，此时我们在浏览器控制台中可以看到 200 OK(from cache) ，此时的情况就是完全使用缓存，浏览器和服务器没有任何交互的。</p>\n<p>情景二：若已过期，则向服务器发送请求，此时请求中会带上①中设置的文件修改时间，和Etag</p>\n<p>然后，进行资源更新判断。服务器根据浏览器传过来的文件修改时间，判断自浏览器上一次请求之后，文件是不是没有被修改过；根据Etag，判断文件内容自上一次请求之后，有没有发生变化</p>\n<p>情形一：若两种判断的结论都是文件没有被修改过，则服务器就不给浏览器发index.html的内容了，直接告诉它，文件没有被修改过，你用你那边的缓存吧—— 304 Not Modified，此时浏览器就会从本地缓存中获取index.html的内容。此时的情况叫协议缓存，浏览器和服务器之间有一次请求交互。<br>情形二：若修改时间和文件内容判断有任意一个没有通过，则服务器会受理此次请求，之后的操作同①</p>\n<p>① 只有get请求会被缓存，post请求不会</p>\n<p>Expires和Cache-Control</p>\n<p>Expires要求客户端和服务端的时钟严格同步。HTTP1.1引入Cache-Control来克服Expires头的限制。如果max-age和Expires同时出现，则max-age有更高的优先级。</p>\n<pre><code>Cache-Control: no-cache, private, max-age=0\n\nETag: abcde\n\nExpires: Thu, 15 Apr 2014 20:00:00 GMT\n\nPragma: private\n\nLast-Modified: $now // RFC1123 format\n</code></pre><p>ETag应用:</p>\n<p>Etag由服务器端生成，客户端通过If-Match或者说If-None-Match这个条件判断请求来验证资源是否修改。常见的是使用If-None-Match。请求一个文件的流程可能如下：</p>\n<p>====第一次请求===</p>\n<p>1.客户端发起 HTTP GET 请求一个文件；</p>\n<p>2.服务器处理请求，返回文件内容和一堆Header，当然包括Etag(例如”2e681a-6-5d044840”)(假设服务器支持Etag生成和已经开启了Etag).状态码200<br>====第二次请求===</p>\n<p>客户端发起 HTTP GET 请求一个文件，注意这个时候客户端同时发送一个If-None-Match头，这个头的内容就是第一次请求时服务器返回的Etag：2e681a-6-5d0448402.服务器判断发送过来的Etag和计算出来的Etag匹配，因此If-None-Match为False，不返回200，返回304，客户端继续使用本地缓存；流程很简单，问题是，如果服务器又设置了Cache-Control:max-age和Expires呢，怎么办<br>答案是同时使用，也就是说在完全匹配If-Modified-Since和If-None-Match即检查完修改时间和Etag之后，</p>\n<p>服务器才能返回304.(不要陷入到底使用谁的问题怪圈)</p>\n<p>为什么使用Etag请求头?</p>\n<p>Etag 主要为了解决 Last-Modified 无法解决的一些问题。</p>\n<h3 id=\"Javascript垃圾回收方法\"><a href=\"#Javascript垃圾回收方法\" class=\"headerlink\" title=\"Javascript垃圾回收方法\"></a>Javascript垃圾回收方法</h3><blockquote>\n<p>标记清除（mark and sweep）</p>\n</blockquote>\n<p>这是JavaScript最常见的垃圾回收方式，当变量进入执行环境的时候，比如函数中声明一个变量，垃圾回收器将其标记为“进入环境”，当变量离开环境的时候（函数执行结束）将其标记为“离开环境”。</p>\n<p>垃圾回收器会在运行的时候给存储在内存中的所有变量加上标记，然后去掉环境中的变量以及被环境中变量所引用的变量（闭包），在这些完成之后仍存在标记的就是要删除的变量了</p>\n<blockquote>\n<p>引用计数(reference counting)</p>\n</blockquote>\n<p>在低版本IE中经常会出现内存泄露，很多时候就是因为其采用引用计数方式进行垃圾回收。引用计数的策略是跟踪记录每个值被使用的次数，当声明了一个 变量并将一个引用类型赋值给该变量的时候这个值的引用次数就加1，如果该变量的值变成了另外一个，则这个值得引用次数减1，当这个值的引用次数变为0的时 候，说明没有变量在使用，这个值没法被访问了，因此可以将其占用的空间回收，这样垃圾回收器会在运行的时候清理掉引用次数为0的值占用的空间。</p>\n<p>在IE中虽然JavaScript对象通过标记清除的方式进行垃圾回收，但BOM与DOM对象却是通过引用计数回收垃圾的，<br>也就是说只要涉及BOM及DOM就会出现循环引用问题。</p>\n"},{"title":"常用网站","date":"2018-02-08T02:36:26.000Z","_content":"\n# 参考手册\n  * [css参考手册](http://css.doyoe.com/)\n  * [css3参考手册](http://www.divcss5.com/css3/)\n  * [jquery手册](http://jquery.cuishifeng.cn/)\n---\n\n# 前端框架\n  * [Bootstrop](http://v3.bootcss.com/)\n  * [vue](https://cn.vuejs.org/v2/guide/)\n  * [vux](https://vux.li/#/)\n  * [hexo](https://hexo.io/zh-cn/docs/)\n---\n\n# 学习资料\n* [前端导航](https://luuman.github.io/FrontEndGuide/V1/index.html#page_0)\n* [ES6](http://es6.ruanyifeng.com/#README)\n* [微信小程序文档](https://mp.weixin.qq.com/debug/wxadoc/dev/)\n* [markdown 语法说明](http://www.markdown.cn/#philosophy/)\n---\n\n# 插件\n\n \n ## css样式重置\n * [normalize.css](http://necolas.github.io/normalize.css/)\n * [CSS reset](https://cssreset.com/)\n\n\n ## 动画库\n * [Animate.css](https://daneden.github.io/animate.css/)\n * [Effeckt.css](http://h5bp.github.io/Effeckt.css/)\n * [magic.css](https://www.minimamente.com/example/magic_animations/)\n * [csshake.css -- 抖动动画](http://www.htmleaf.com/css3/css3donghua/201501061116.html/)\n * [snabbt.js](http://www.htmleaf.com/jQuery/Image-Effects/201501061112.html)\n \n \n ## JQuery插件\n * [JQuery插件库](http://www.jq22.com/)\n * [JQuery之家](http://www.htmleaf.com/)\n * [jqueryfuns-- 响应式模板](http://www.jqueryfuns.com/)\n * [fullPage.js--全屏滚动插件](https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#fullpagejs)\n * [myFocus -- js焦点轮播](http://demo.jb51.net/js/myfocus/demo.html)\n \n# 工具\n * [贝塞尔曲线css3绘制工具](http://cubic-bezier.com/#.17,.67,.83,.67)\n\n\n ---\n\n# 素材网\n* [图片压缩](https://tinypng.com/)\n* [阿里巴巴矢量图](http://www.iconfont.cn/)\n* [ionicons--图标](http://ionicons.com/)\n\n ---\n# 面试题库\n* [2017年前端面试题整理汇总100题](http://blog.csdn.net/kebi007/article/details/54882425#comments)\n* [前端面试题目搜集](https://www.kancloud.cn/digest/front-interview/86832)\n\n","source":"_posts/常用网站.md","raw":"---\ntitle: 常用网站\ndate: 2018-02-08 10:36:26\ncategories: 学习文档\n---\n\n# 参考手册\n  * [css参考手册](http://css.doyoe.com/)\n  * [css3参考手册](http://www.divcss5.com/css3/)\n  * [jquery手册](http://jquery.cuishifeng.cn/)\n---\n\n# 前端框架\n  * [Bootstrop](http://v3.bootcss.com/)\n  * [vue](https://cn.vuejs.org/v2/guide/)\n  * [vux](https://vux.li/#/)\n  * [hexo](https://hexo.io/zh-cn/docs/)\n---\n\n# 学习资料\n* [前端导航](https://luuman.github.io/FrontEndGuide/V1/index.html#page_0)\n* [ES6](http://es6.ruanyifeng.com/#README)\n* [微信小程序文档](https://mp.weixin.qq.com/debug/wxadoc/dev/)\n* [markdown 语法说明](http://www.markdown.cn/#philosophy/)\n---\n\n# 插件\n\n \n ## css样式重置\n * [normalize.css](http://necolas.github.io/normalize.css/)\n * [CSS reset](https://cssreset.com/)\n\n\n ## 动画库\n * [Animate.css](https://daneden.github.io/animate.css/)\n * [Effeckt.css](http://h5bp.github.io/Effeckt.css/)\n * [magic.css](https://www.minimamente.com/example/magic_animations/)\n * [csshake.css -- 抖动动画](http://www.htmleaf.com/css3/css3donghua/201501061116.html/)\n * [snabbt.js](http://www.htmleaf.com/jQuery/Image-Effects/201501061112.html)\n \n \n ## JQuery插件\n * [JQuery插件库](http://www.jq22.com/)\n * [JQuery之家](http://www.htmleaf.com/)\n * [jqueryfuns-- 响应式模板](http://www.jqueryfuns.com/)\n * [fullPage.js--全屏滚动插件](https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#fullpagejs)\n * [myFocus -- js焦点轮播](http://demo.jb51.net/js/myfocus/demo.html)\n \n# 工具\n * [贝塞尔曲线css3绘制工具](http://cubic-bezier.com/#.17,.67,.83,.67)\n\n\n ---\n\n# 素材网\n* [图片压缩](https://tinypng.com/)\n* [阿里巴巴矢量图](http://www.iconfont.cn/)\n* [ionicons--图标](http://ionicons.com/)\n\n ---\n# 面试题库\n* [2017年前端面试题整理汇总100题](http://blog.csdn.net/kebi007/article/details/54882425#comments)\n* [前端面试题目搜集](https://www.kancloud.cn/digest/front-interview/86832)\n\n","slug":"常用网站","published":1,"updated":"2018-02-24T05:57:30.239Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjeqhmndf00081gtw7e9iqm4r","content":"<h1 id=\"参考手册\"><a href=\"#参考手册\" class=\"headerlink\" title=\"参考手册\"></a>参考手册</h1><ul>\n<li><a href=\"http://css.doyoe.com/\" target=\"_blank\" rel=\"noopener\">css参考手册</a></li>\n<li><a href=\"http://www.divcss5.com/css3/\" target=\"_blank\" rel=\"noopener\">css3参考手册</a></li>\n<li><a href=\"http://jquery.cuishifeng.cn/\" target=\"_blank\" rel=\"noopener\">jquery手册</a></li>\n</ul>\n<hr>\n<h1 id=\"前端框架\"><a href=\"#前端框架\" class=\"headerlink\" title=\"前端框架\"></a>前端框架</h1><ul>\n<li><a href=\"http://v3.bootcss.com/\" target=\"_blank\" rel=\"noopener\">Bootstrop</a></li>\n<li><a href=\"https://cn.vuejs.org/v2/guide/\" target=\"_blank\" rel=\"noopener\">vue</a></li>\n<li><a href=\"https://vux.li/#/\" target=\"_blank\" rel=\"noopener\">vux</a></li>\n<li><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">hexo</a></li>\n</ul>\n<hr>\n<h1 id=\"学习资料\"><a href=\"#学习资料\" class=\"headerlink\" title=\"学习资料\"></a>学习资料</h1><ul>\n<li><a href=\"https://luuman.github.io/FrontEndGuide/V1/index.html#page_0\" target=\"_blank\" rel=\"noopener\">前端导航</a></li>\n<li><a href=\"http://es6.ruanyifeng.com/#README\" target=\"_blank\" rel=\"noopener\">ES6</a></li>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/\" target=\"_blank\" rel=\"noopener\">微信小程序文档</a></li>\n<li><a href=\"http://www.markdown.cn/#philosophy/\" target=\"_blank\" rel=\"noopener\">markdown 语法说明</a></li>\n</ul>\n<hr>\n<h1 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h1><h2 id=\"css样式重置\"><a href=\"#css样式重置\" class=\"headerlink\" title=\"css样式重置\"></a>css样式重置</h2><ul>\n<li><a href=\"http://necolas.github.io/normalize.css/\" target=\"_blank\" rel=\"noopener\">normalize.css</a></li>\n<li><a href=\"https://cssreset.com/\" target=\"_blank\" rel=\"noopener\">CSS reset</a></li>\n</ul>\n<h2 id=\"动画库\"><a href=\"#动画库\" class=\"headerlink\" title=\"动画库\"></a>动画库</h2><ul>\n<li><a href=\"https://daneden.github.io/animate.css/\" target=\"_blank\" rel=\"noopener\">Animate.css</a></li>\n<li><a href=\"http://h5bp.github.io/Effeckt.css/\" target=\"_blank\" rel=\"noopener\">Effeckt.css</a></li>\n<li><a href=\"https://www.minimamente.com/example/magic_animations/\" target=\"_blank\" rel=\"noopener\">magic.css</a></li>\n<li><a href=\"http://www.htmleaf.com/css3/css3donghua/201501061116.html/\" target=\"_blank\" rel=\"noopener\">csshake.css – 抖动动画</a></li>\n<li><a href=\"http://www.htmleaf.com/jQuery/Image-Effects/201501061112.html\" target=\"_blank\" rel=\"noopener\">snabbt.js</a></li>\n</ul>\n<h2 id=\"JQuery插件\"><a href=\"#JQuery插件\" class=\"headerlink\" title=\"JQuery插件\"></a>JQuery插件</h2><ul>\n<li><a href=\"http://www.jq22.com/\" target=\"_blank\" rel=\"noopener\">JQuery插件库</a></li>\n<li><a href=\"http://www.htmleaf.com/\" target=\"_blank\" rel=\"noopener\">JQuery之家</a></li>\n<li><a href=\"http://www.jqueryfuns.com/\" target=\"_blank\" rel=\"noopener\">jqueryfuns– 响应式模板</a></li>\n<li><a href=\"https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#fullpagejs\" target=\"_blank\" rel=\"noopener\">fullPage.js–全屏滚动插件</a></li>\n<li><a href=\"http://demo.jb51.net/js/myfocus/demo.html\" target=\"_blank\" rel=\"noopener\">myFocus – js焦点轮播</a></li>\n</ul>\n<h1 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h1><ul>\n<li><a href=\"http://cubic-bezier.com/#.17,.67,.83,.67\" target=\"_blank\" rel=\"noopener\">贝塞尔曲线css3绘制工具</a></li>\n</ul>\n<hr>\n<h1 id=\"素材网\"><a href=\"#素材网\" class=\"headerlink\" title=\"素材网\"></a>素材网</h1><ul>\n<li><a href=\"https://tinypng.com/\" target=\"_blank\" rel=\"noopener\">图片压缩</a></li>\n<li><a href=\"http://www.iconfont.cn/\" target=\"_blank\" rel=\"noopener\">阿里巴巴矢量图</a></li>\n<li><p><a href=\"http://ionicons.com/\" target=\"_blank\" rel=\"noopener\">ionicons–图标</a></p>\n<hr>\n<h1 id=\"面试题库\"><a href=\"#面试题库\" class=\"headerlink\" title=\"面试题库\"></a>面试题库</h1></li>\n<li><a href=\"http://blog.csdn.net/kebi007/article/details/54882425#comments\" target=\"_blank\" rel=\"noopener\">2017年前端面试题整理汇总100题</a></li>\n<li><a href=\"https://www.kancloud.cn/digest/front-interview/86832\" target=\"_blank\" rel=\"noopener\">前端面试题目搜集</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"参考手册\"><a href=\"#参考手册\" class=\"headerlink\" title=\"参考手册\"></a>参考手册</h1><ul>\n<li><a href=\"http://css.doyoe.com/\" target=\"_blank\" rel=\"noopener\">css参考手册</a></li>\n<li><a href=\"http://www.divcss5.com/css3/\" target=\"_blank\" rel=\"noopener\">css3参考手册</a></li>\n<li><a href=\"http://jquery.cuishifeng.cn/\" target=\"_blank\" rel=\"noopener\">jquery手册</a></li>\n</ul>\n<hr>\n<h1 id=\"前端框架\"><a href=\"#前端框架\" class=\"headerlink\" title=\"前端框架\"></a>前端框架</h1><ul>\n<li><a href=\"http://v3.bootcss.com/\" target=\"_blank\" rel=\"noopener\">Bootstrop</a></li>\n<li><a href=\"https://cn.vuejs.org/v2/guide/\" target=\"_blank\" rel=\"noopener\">vue</a></li>\n<li><a href=\"https://vux.li/#/\" target=\"_blank\" rel=\"noopener\">vux</a></li>\n<li><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">hexo</a></li>\n</ul>\n<hr>\n<h1 id=\"学习资料\"><a href=\"#学习资料\" class=\"headerlink\" title=\"学习资料\"></a>学习资料</h1><ul>\n<li><a href=\"https://luuman.github.io/FrontEndGuide/V1/index.html#page_0\" target=\"_blank\" rel=\"noopener\">前端导航</a></li>\n<li><a href=\"http://es6.ruanyifeng.com/#README\" target=\"_blank\" rel=\"noopener\">ES6</a></li>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/\" target=\"_blank\" rel=\"noopener\">微信小程序文档</a></li>\n<li><a href=\"http://www.markdown.cn/#philosophy/\" target=\"_blank\" rel=\"noopener\">markdown 语法说明</a></li>\n</ul>\n<hr>\n<h1 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h1><h2 id=\"css样式重置\"><a href=\"#css样式重置\" class=\"headerlink\" title=\"css样式重置\"></a>css样式重置</h2><ul>\n<li><a href=\"http://necolas.github.io/normalize.css/\" target=\"_blank\" rel=\"noopener\">normalize.css</a></li>\n<li><a href=\"https://cssreset.com/\" target=\"_blank\" rel=\"noopener\">CSS reset</a></li>\n</ul>\n<h2 id=\"动画库\"><a href=\"#动画库\" class=\"headerlink\" title=\"动画库\"></a>动画库</h2><ul>\n<li><a href=\"https://daneden.github.io/animate.css/\" target=\"_blank\" rel=\"noopener\">Animate.css</a></li>\n<li><a href=\"http://h5bp.github.io/Effeckt.css/\" target=\"_blank\" rel=\"noopener\">Effeckt.css</a></li>\n<li><a href=\"https://www.minimamente.com/example/magic_animations/\" target=\"_blank\" rel=\"noopener\">magic.css</a></li>\n<li><a href=\"http://www.htmleaf.com/css3/css3donghua/201501061116.html/\" target=\"_blank\" rel=\"noopener\">csshake.css – 抖动动画</a></li>\n<li><a href=\"http://www.htmleaf.com/jQuery/Image-Effects/201501061112.html\" target=\"_blank\" rel=\"noopener\">snabbt.js</a></li>\n</ul>\n<h2 id=\"JQuery插件\"><a href=\"#JQuery插件\" class=\"headerlink\" title=\"JQuery插件\"></a>JQuery插件</h2><ul>\n<li><a href=\"http://www.jq22.com/\" target=\"_blank\" rel=\"noopener\">JQuery插件库</a></li>\n<li><a href=\"http://www.htmleaf.com/\" target=\"_blank\" rel=\"noopener\">JQuery之家</a></li>\n<li><a href=\"http://www.jqueryfuns.com/\" target=\"_blank\" rel=\"noopener\">jqueryfuns– 响应式模板</a></li>\n<li><a href=\"https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#fullpagejs\" target=\"_blank\" rel=\"noopener\">fullPage.js–全屏滚动插件</a></li>\n<li><a href=\"http://demo.jb51.net/js/myfocus/demo.html\" target=\"_blank\" rel=\"noopener\">myFocus – js焦点轮播</a></li>\n</ul>\n<h1 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h1><ul>\n<li><a href=\"http://cubic-bezier.com/#.17,.67,.83,.67\" target=\"_blank\" rel=\"noopener\">贝塞尔曲线css3绘制工具</a></li>\n</ul>\n<hr>\n<h1 id=\"素材网\"><a href=\"#素材网\" class=\"headerlink\" title=\"素材网\"></a>素材网</h1><ul>\n<li><a href=\"https://tinypng.com/\" target=\"_blank\" rel=\"noopener\">图片压缩</a></li>\n<li><a href=\"http://www.iconfont.cn/\" target=\"_blank\" rel=\"noopener\">阿里巴巴矢量图</a></li>\n<li><p><a href=\"http://ionicons.com/\" target=\"_blank\" rel=\"noopener\">ionicons–图标</a></p>\n<hr>\n<h1 id=\"面试题库\"><a href=\"#面试题库\" class=\"headerlink\" title=\"面试题库\"></a>面试题库</h1></li>\n<li><a href=\"http://blog.csdn.net/kebi007/article/details/54882425#comments\" target=\"_blank\" rel=\"noopener\">2017年前端面试题整理汇总100题</a></li>\n<li><a href=\"https://www.kancloud.cn/digest/front-interview/86832\" target=\"_blank\" rel=\"noopener\">前端面试题目搜集</a></li>\n</ul>\n"}],"PostAsset":[{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-3.jpg","slug":"hexo-3.jpg","post":"cjeqhmnda00061gtwrexm9sel","modified":1,"renderable":0},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-1.jpg","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-10.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-10.png","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-11.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-11.png","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-12.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-12.png","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-13.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-13.png","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-14.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-14.png","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-2.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-2.png","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-4.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-4.png","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-5.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-5.png","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-6.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-6.png","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-7.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-7.png","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-8.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-8.png","modified":1,"renderable":1},{"_id":"source/_posts/github+hexo博客的主题安装及优化/hexo-9.png","post":"cjeqhmnda00061gtwrexm9sel","slug":"hexo-9.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjeqhmncs00001gtwsx3xf8o6","category_id":"cjeqhmnd700041gtwwdrlu7dj","_id":"cjeqhmndt000b1gtwmilptlv0"},{"post_id":"cjeqhmnd100021gtwmp6w1j88","category_id":"cjeqhmndj00091gtwyxh4e9c8","_id":"cjeqhmndy000f1gtwsy5n98tl"},{"post_id":"cjeqhmnda00061gtwrexm9sel","category_id":"cjeqhmndj00091gtwyxh4e9c8","_id":"cjeqhmne2000j1gtw9ffbcf6h"},{"post_id":"cjeqhmndc00071gtw8o9kphh0","category_id":"cjeqhmndj00091gtwyxh4e9c8","_id":"cjeqhmne5000n1gtwj6ej7a63"},{"post_id":"cjeqhmndf00081gtw7e9iqm4r","category_id":"cjeqhmndj00091gtwyxh4e9c8","_id":"cjeqhmne8000r1gtwtagm0k57"}],"PostTag":[{"post_id":"cjeqhmncs00001gtwsx3xf8o6","tag_id":"cjeqhmnd900051gtwcdxc4cxs","_id":"cjeqhmne0000h1gtwvj771h9o"},{"post_id":"cjeqhmncs00001gtwsx3xf8o6","tag_id":"cjeqhmndq000a1gtwduxoheu4","_id":"cjeqhmne2000k1gtwwexmsd58"},{"post_id":"cjeqhmncs00001gtwsx3xf8o6","tag_id":"cjeqhmndt000d1gtwz76hnctw","_id":"cjeqhmne4000m1gtwc478x32o"},{"post_id":"cjeqhmnd100021gtwmp6w1j88","tag_id":"cjeqhmndz000g1gtwavp0w7sy","_id":"cjeqhmne5000o1gtwi884wqka"},{"post_id":"cjeqhmnda00061gtwrexm9sel","tag_id":"cjeqhmne3000l1gtwyomprfc1","_id":"cjeqhmne8000q1gtwc9io5w28"},{"post_id":"cjeqhmndc00071gtw8o9kphh0","tag_id":"cjeqhmnd900051gtwcdxc4cxs","_id":"cjeqhmnec000t1gtwwtxyil9k"},{"post_id":"cjeqhmndc00071gtw8o9kphh0","tag_id":"cjeqhmndq000a1gtwduxoheu4","_id":"cjeqhmned000u1gtwmlpymdp7"},{"post_id":"cjeqhmndc00071gtw8o9kphh0","tag_id":"cjeqhmndt000d1gtwz76hnctw","_id":"cjeqhmned000v1gtwkjx22x33"}],"Tag":[{"name":"HTML","_id":"cjeqhmnd900051gtwcdxc4cxs"},{"name":"CSS","_id":"cjeqhmndq000a1gtwduxoheu4"},{"name":"JS","_id":"cjeqhmndt000d1gtwz76hnctw"},{"name":"前端基础","_id":"cjeqhmndz000g1gtwavp0w7sy"},{"name":"Hexo","_id":"cjeqhmne3000l1gtwyomprfc1"}]}}